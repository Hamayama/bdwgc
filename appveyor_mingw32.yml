#branches:
#  only:
#    - master

environment:
  matrix:
#    - TARGET: MINGW64
    - TARGET: MINGW32
  GCTEST_LOG_FILE: .libs/gctest.gc.log
  GCDATA_FILE: gcdata.txt
  COUNT_MAX: 1000

for:
#  -
#    matrix:
#      only:
#        - TARGET: MINGW64
#    environment:
#      MSYSTEM: MINGW64
#      PATH: C:\msys64\mingw64\bin;C:\msys64\usr\local\bin;C:\msys64\usr\bin;C:\msys64\bin;%PATH%
  -
    matrix:
      only:
        - TARGET: MINGW32
    environment:
      MSYSTEM: MINGW32
      PATH: C:\msys64\mingw32\bin;C:\msys64\usr\local\bin;C:\msys64\usr\bin;C:\msys64\bin;%PATH%

install:
  - echo %TARGET%
#  - echo %MSYSTEM%
#  - echo %PATH%
#  - cd
#  - dir
  - git clone --depth=50 https://github.com/ivmai/libatomic_ops.git -b release-7_6

build_script:
  - bash -lc "gcc -v"
  - bash -lc "pwd"
  - bash -lc "cd $APPVEYOR_BUILD_FOLDER && ./autogen.sh"
  - bash -lc "cd $APPVEYOR_BUILD_FOLDER && ./configure --enable-threads=win32 --enable-large-config CPPFLAGS="-DNO_ABORT_MSGBOX "

test_script:
  - bash -lc "cd $APPVEYOR_BUILD_FOLDER && make check"
  - bash -lc "cd $APPVEYOR_BUILD_FOLDER && cat $GCTEST_LOG_FILE"
  - bash -lc "cd $APPVEYOR_BUILD_FOLDER &&
              COUNT=0; ERRCNT=0;
              :>$GCDATA_FILE;
              while ((COUNT<COUNT_MAX)); do
                  ./gctest.exe || { ((ERRCNT++)); cat $GCTEST_LOG_FILE; };
                  FINAL_HEAP=$(cat $GCTEST_LOG_FILE | grep -e 'Final heap size' | sed -e 's/[^0-9]//g');
                  TOTAL_HEAP=$(cat $GCTEST_LOG_FILE | grep -e 'Total heap size' | sed -e 's/[^0-9]//g');
                  ((COUNT++));
                  printf '%%%%4d,%%%%4d,%%%%10d,%%%%10d\n' $COUNT $ERRCNT $FINAL_HEAP $TOTAL_HEAP | tee -a $GCDATA_FILE;
              done;"

artifacts:
  - path: $(GCDATA_FILE)

